// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: grpc/proto/dataService.proto

package csvDataService

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetItemsRequest) Reset() {
	*x = GetItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_dataService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemsRequest) ProtoMessage() {}

func (x *GetItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_dataService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemsRequest.ProtoReflect.Descriptor instead.
func (*GetItemsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_dataService_proto_rawDescGZIP(), []int{0}
}

func (x *GetItemsRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid                       string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Domain                    string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Cn                        string `protobuf:"bytes,4,opt,name=cn,proto3" json:"cn,omitempty"`
	Department                string `protobuf:"bytes,5,opt,name=department,proto3" json:"department,omitempty"`
	Title                     string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Who                       string `protobuf:"bytes,7,opt,name=who,proto3" json:"who,omitempty"`
	LogonCount                int32  `protobuf:"varint,8,opt,name=logon_count,json=logonCount,proto3" json:"logon_count,omitempty"`
	NumLogons7                int32  `protobuf:"varint,9,opt,name=num_logons7,json=numLogons7,proto3" json:"num_logons7,omitempty"`
	NumShare7                 int32  `protobuf:"varint,10,opt,name=num_share7,json=numShare7,proto3" json:"num_share7,omitempty"`
	NumFile7                  int32  `protobuf:"varint,11,opt,name=num_file7,json=numFile7,proto3" json:"num_file7,omitempty"`
	NumAd7                    int32  `protobuf:"varint,12,opt,name=num_ad7,json=numAd7,proto3" json:"num_ad7,omitempty"`
	NumN7                     int32  `protobuf:"varint,13,opt,name=num_n7,json=numN7,proto3" json:"num_n7,omitempty"`
	NumLogons14               int32  `protobuf:"varint,14,opt,name=num_logons14,json=numLogons14,proto3" json:"num_logons14,omitempty"`
	NumShare14                int32  `protobuf:"varint,15,opt,name=num_share14,json=numShare14,proto3" json:"num_share14,omitempty"`
	NumFile14                 int32  `protobuf:"varint,16,opt,name=num_file14,json=numFile14,proto3" json:"num_file14,omitempty"`
	NumAd14                   int32  `protobuf:"varint,17,opt,name=num_ad14,json=numAd14,proto3" json:"num_ad14,omitempty"`
	NumN14                    int32  `protobuf:"varint,18,opt,name=num_n14,json=numN14,proto3" json:"num_n14,omitempty"`
	NumLogons30               int32  `protobuf:"varint,19,opt,name=num_logons30,json=numLogons30,proto3" json:"num_logons30,omitempty"`
	NumShare30                int32  `protobuf:"varint,20,opt,name=num_share30,json=numShare30,proto3" json:"num_share30,omitempty"`
	NumFile30                 int32  `protobuf:"varint,21,opt,name=num_file30,json=numFile30,proto3" json:"num_file30,omitempty"`
	NumAd30                   int32  `protobuf:"varint,22,opt,name=num_ad30,json=numAd30,proto3" json:"num_ad30,omitempty"`
	NumN30                    int32  `protobuf:"varint,23,opt,name=num_n30,json=numN30,proto3" json:"num_n30,omitempty"`
	NumLogons150              int32  `protobuf:"varint,24,opt,name=num_logons150,json=numLogons150,proto3" json:"num_logons150,omitempty"`
	NumShare150               int32  `protobuf:"varint,25,opt,name=num_share150,json=numShare150,proto3" json:"num_share150,omitempty"`
	NumFile150                int32  `protobuf:"varint,26,opt,name=num_file150,json=numFile150,proto3" json:"num_file150,omitempty"`
	NumAd150                  int32  `protobuf:"varint,27,opt,name=num_ad150,json=numAd150,proto3" json:"num_ad150,omitempty"`
	NumN150                   int32  `protobuf:"varint,28,opt,name=num_n150,json=numN150,proto3" json:"num_n150,omitempty"`
	NumLogons365              int32  `protobuf:"varint,29,opt,name=num_logons365,json=numLogons365,proto3" json:"num_logons365,omitempty"`
	NumShare365               int32  `protobuf:"varint,30,opt,name=num_share365,json=numShare365,proto3" json:"num_share365,omitempty"`
	NumFile365                int32  `protobuf:"varint,31,opt,name=num_file365,json=numFile365,proto3" json:"num_file365,omitempty"`
	NumAd365                  int32  `protobuf:"varint,32,opt,name=num_ad365,json=numAd365,proto3" json:"num_ad365,omitempty"`
	NumN365                   int32  `protobuf:"varint,33,opt,name=num_n365,json=numN365,proto3" json:"num_n365,omitempty"`
	HasUserPrincipalName      bool   `protobuf:"varint,34,opt,name=has_user_principal_name,json=hasUserPrincipalName,proto3" json:"has_user_principal_name,omitempty"`
	HasMail                   bool   `protobuf:"varint,35,opt,name=has_mail,json=hasMail,proto3" json:"has_mail,omitempty"`
	HasPhone                  bool   `protobuf:"varint,36,opt,name=has_phone,json=hasPhone,proto3" json:"has_phone,omitempty"`
	FlagDisabled              bool   `protobuf:"varint,37,opt,name=flag_disabled,json=flagDisabled,proto3" json:"flag_disabled,omitempty"`
	FlagLockout               bool   `protobuf:"varint,38,opt,name=flag_lockout,json=flagLockout,proto3" json:"flag_lockout,omitempty"`
	FlagPasswordNotRequired   bool   `protobuf:"varint,39,opt,name=flag_password_not_required,json=flagPasswordNotRequired,proto3" json:"flag_password_not_required,omitempty"`
	FlagPasswordCantChange    bool   `protobuf:"varint,40,opt,name=flag_password_cant_change,json=flagPasswordCantChange,proto3" json:"flag_password_cant_change,omitempty"`
	FlagDontExpirePassword    bool   `protobuf:"varint,41,opt,name=flag_dont_expire_password,json=flagDontExpirePassword,proto3" json:"flag_dont_expire_password,omitempty"`
	OwnedFiles                int32  `protobuf:"varint,42,opt,name=owned_files,json=ownedFiles,proto3" json:"owned_files,omitempty"`
	NumMailboxes              int32  `protobuf:"varint,43,opt,name=num_mailboxes,json=numMailboxes,proto3" json:"num_mailboxes,omitempty"`
	NumMemberOfGroups         int32  `protobuf:"varint,44,opt,name=num_member_of_groups,json=numMemberOfGroups,proto3" json:"num_member_of_groups,omitempty"`
	NumMemberOfIndirectGroups int32  `protobuf:"varint,45,opt,name=num_member_of_indirect_groups,json=numMemberOfIndirectGroups,proto3" json:"num_member_of_indirect_groups,omitempty"`
	MemberOfIndirectGroupsIds string `protobuf:"bytes,46,opt,name=member_of_indirect_groups_ids,json=memberOfIndirectGroupsIds,proto3" json:"member_of_indirect_groups_ids,omitempty"`
	MemberOfGroupsIds         string `protobuf:"bytes,47,opt,name=member_of_groups_ids,json=memberOfGroupsIds,proto3" json:"member_of_groups_ids,omitempty"`
	IsAdmin                   bool   `protobuf:"varint,48,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	IsService                 bool   `protobuf:"varint,49,opt,name=is_service,json=isService,proto3" json:"is_service,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_dataService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_dataService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_grpc_proto_dataService_proto_rawDescGZIP(), []int{1}
}

func (x *Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Item) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Item) GetCn() string {
	if x != nil {
		return x.Cn
	}
	return ""
}

func (x *Item) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Item) GetWho() string {
	if x != nil {
		return x.Who
	}
	return ""
}

func (x *Item) GetLogonCount() int32 {
	if x != nil {
		return x.LogonCount
	}
	return 0
}

func (x *Item) GetNumLogons7() int32 {
	if x != nil {
		return x.NumLogons7
	}
	return 0
}

func (x *Item) GetNumShare7() int32 {
	if x != nil {
		return x.NumShare7
	}
	return 0
}

func (x *Item) GetNumFile7() int32 {
	if x != nil {
		return x.NumFile7
	}
	return 0
}

func (x *Item) GetNumAd7() int32 {
	if x != nil {
		return x.NumAd7
	}
	return 0
}

func (x *Item) GetNumN7() int32 {
	if x != nil {
		return x.NumN7
	}
	return 0
}

func (x *Item) GetNumLogons14() int32 {
	if x != nil {
		return x.NumLogons14
	}
	return 0
}

func (x *Item) GetNumShare14() int32 {
	if x != nil {
		return x.NumShare14
	}
	return 0
}

func (x *Item) GetNumFile14() int32 {
	if x != nil {
		return x.NumFile14
	}
	return 0
}

func (x *Item) GetNumAd14() int32 {
	if x != nil {
		return x.NumAd14
	}
	return 0
}

func (x *Item) GetNumN14() int32 {
	if x != nil {
		return x.NumN14
	}
	return 0
}

func (x *Item) GetNumLogons30() int32 {
	if x != nil {
		return x.NumLogons30
	}
	return 0
}

func (x *Item) GetNumShare30() int32 {
	if x != nil {
		return x.NumShare30
	}
	return 0
}

func (x *Item) GetNumFile30() int32 {
	if x != nil {
		return x.NumFile30
	}
	return 0
}

func (x *Item) GetNumAd30() int32 {
	if x != nil {
		return x.NumAd30
	}
	return 0
}

func (x *Item) GetNumN30() int32 {
	if x != nil {
		return x.NumN30
	}
	return 0
}

func (x *Item) GetNumLogons150() int32 {
	if x != nil {
		return x.NumLogons150
	}
	return 0
}

func (x *Item) GetNumShare150() int32 {
	if x != nil {
		return x.NumShare150
	}
	return 0
}

func (x *Item) GetNumFile150() int32 {
	if x != nil {
		return x.NumFile150
	}
	return 0
}

func (x *Item) GetNumAd150() int32 {
	if x != nil {
		return x.NumAd150
	}
	return 0
}

func (x *Item) GetNumN150() int32 {
	if x != nil {
		return x.NumN150
	}
	return 0
}

func (x *Item) GetNumLogons365() int32 {
	if x != nil {
		return x.NumLogons365
	}
	return 0
}

func (x *Item) GetNumShare365() int32 {
	if x != nil {
		return x.NumShare365
	}
	return 0
}

func (x *Item) GetNumFile365() int32 {
	if x != nil {
		return x.NumFile365
	}
	return 0
}

func (x *Item) GetNumAd365() int32 {
	if x != nil {
		return x.NumAd365
	}
	return 0
}

func (x *Item) GetNumN365() int32 {
	if x != nil {
		return x.NumN365
	}
	return 0
}

func (x *Item) GetHasUserPrincipalName() bool {
	if x != nil {
		return x.HasUserPrincipalName
	}
	return false
}

func (x *Item) GetHasMail() bool {
	if x != nil {
		return x.HasMail
	}
	return false
}

func (x *Item) GetHasPhone() bool {
	if x != nil {
		return x.HasPhone
	}
	return false
}

func (x *Item) GetFlagDisabled() bool {
	if x != nil {
		return x.FlagDisabled
	}
	return false
}

func (x *Item) GetFlagLockout() bool {
	if x != nil {
		return x.FlagLockout
	}
	return false
}

func (x *Item) GetFlagPasswordNotRequired() bool {
	if x != nil {
		return x.FlagPasswordNotRequired
	}
	return false
}

func (x *Item) GetFlagPasswordCantChange() bool {
	if x != nil {
		return x.FlagPasswordCantChange
	}
	return false
}

func (x *Item) GetFlagDontExpirePassword() bool {
	if x != nil {
		return x.FlagDontExpirePassword
	}
	return false
}

func (x *Item) GetOwnedFiles() int32 {
	if x != nil {
		return x.OwnedFiles
	}
	return 0
}

func (x *Item) GetNumMailboxes() int32 {
	if x != nil {
		return x.NumMailboxes
	}
	return 0
}

func (x *Item) GetNumMemberOfGroups() int32 {
	if x != nil {
		return x.NumMemberOfGroups
	}
	return 0
}

func (x *Item) GetNumMemberOfIndirectGroups() int32 {
	if x != nil {
		return x.NumMemberOfIndirectGroups
	}
	return 0
}

func (x *Item) GetMemberOfIndirectGroupsIds() string {
	if x != nil {
		return x.MemberOfIndirectGroupsIds
	}
	return ""
}

func (x *Item) GetMemberOfGroupsIds() string {
	if x != nil {
		return x.MemberOfGroupsIds
	}
	return ""
}

func (x *Item) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *Item) GetIsService() bool {
	if x != nil {
		return x.IsService
	}
	return false
}

type GetItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetItemsResponse) Reset() {
	*x = GetItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_dataService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemsResponse) ProtoMessage() {}

func (x *GetItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_dataService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemsResponse.ProtoReflect.Descriptor instead.
func (*GetItemsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_dataService_proto_rawDescGZIP(), []int{2}
}

func (x *GetItemsResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_grpc_proto_dataService_proto protoreflect.FileDescriptor

var file_grpc_proto_dataService_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x43, 0x53, 0x56, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0x20, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x23, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x86, 0x0d, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x77, 0x68, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x77,
	0x68, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x6e,
	0x73, 0x37, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x4c, 0x6f, 0x67,
	0x6f, 0x6e, 0x73, 0x37, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x37, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x37, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x37,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x37,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x64, 0x37, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x41, 0x64, 0x37, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x5f, 0x6e, 0x37, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x75, 0x6d, 0x4e, 0x37,
	0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x73, 0x31, 0x34,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x4c, 0x6f, 0x67, 0x6f, 0x6e,
	0x73, 0x31, 0x34, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x31, 0x34, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x31, 0x34, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x31, 0x34, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c,
	0x65, 0x31, 0x34, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x64, 0x31, 0x34, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x41, 0x64, 0x31, 0x34, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x5f, 0x6e, 0x31, 0x34, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x4e, 0x31, 0x34, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x6e, 0x73, 0x33, 0x30, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e,
	0x75, 0x6d, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x73, 0x33, 0x30, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75,
	0x6d, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x33, 0x30, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6e, 0x75, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x33, 0x30, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x75, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x33, 0x30, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x33, 0x30, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75,
	0x6d, 0x5f, 0x61, 0x64, 0x33, 0x30, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75,
	0x6d, 0x41, 0x64, 0x33, 0x30, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x5f, 0x6e, 0x33, 0x30,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x4e, 0x33, 0x30, 0x12, 0x23,
	0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x73, 0x31, 0x35, 0x30, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x73,
	0x31, 0x35, 0x30, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x31, 0x35, 0x30, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x31, 0x35, 0x30, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x31, 0x35, 0x30, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d,
	0x46, 0x69, 0x6c, 0x65, 0x31, 0x35, 0x30, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x61,
	0x64, 0x31, 0x35, 0x30, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x41,
	0x64, 0x31, 0x35, 0x30, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x6e, 0x31, 0x35, 0x30,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x4e, 0x31, 0x35, 0x30, 0x12,
	0x23, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x73, 0x33, 0x36, 0x35,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x4c, 0x6f, 0x67, 0x6f, 0x6e,
	0x73, 0x33, 0x36, 0x35, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x33, 0x36, 0x35, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x33, 0x36, 0x35, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x33, 0x36, 0x35, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75,
	0x6d, 0x46, 0x69, 0x6c, 0x65, 0x33, 0x36, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f,
	0x61, 0x64, 0x33, 0x36, 0x35, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d,
	0x41, 0x64, 0x33, 0x36, 0x35, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x6e, 0x33, 0x36,
	0x35, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x4e, 0x33, 0x36, 0x35,
	0x12, 0x35, 0x0a, 0x17, 0x68, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69,
	0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x14, 0x68, 0x61, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69,
	0x70, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x61,
	0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x6c, 0x61, 0x67, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x6c, 0x6f, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x6c, 0x61, 0x67,
	0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x66, 0x6c, 0x61, 0x67, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x27, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x66, 0x6c, 0x61,
	0x67, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x61, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x66, 0x6c, 0x61, 0x67, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x39, 0x0a, 0x19, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x64, 0x6f, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x29, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x16, 0x66, 0x6c, 0x61, 0x67, 0x44, 0x6f, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x77,
	0x6e, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6e,
	0x75, 0x6d, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x18, 0x2b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x65, 0x73,
	0x12, 0x2f, 0x0a, 0x14, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f,
	0x66, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x6e, 0x75, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x40, 0x0a, 0x1d, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6f, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x6e, 0x75, 0x6d, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x40, 0x0a, 0x1d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x49, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6f, 0x66, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x2f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x18, 0x30, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x31, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x40, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x53, 0x56, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x32, 0x76, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6b, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x2e, 0x43, 0x53, 0x56, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x43,
	0x53, 0x56, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x73, 0x7d, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61, 0x6d, 0x31, 0x64, 0x65, 0x72,
	0x65, 0x2f, 0x43, 0x53, 0x56, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x73, 0x76, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_proto_dataService_proto_rawDescOnce sync.Once
	file_grpc_proto_dataService_proto_rawDescData = file_grpc_proto_dataService_proto_rawDesc
)

func file_grpc_proto_dataService_proto_rawDescGZIP() []byte {
	file_grpc_proto_dataService_proto_rawDescOnce.Do(func() {
		file_grpc_proto_dataService_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_proto_dataService_proto_rawDescData)
	})
	return file_grpc_proto_dataService_proto_rawDescData
}

var file_grpc_proto_dataService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_grpc_proto_dataService_proto_goTypes = []interface{}{
	(*GetItemsRequest)(nil),  // 0: CSV.Data.Service.GetItemsRequest
	(*Item)(nil),             // 1: CSV.Data.Service.Item
	(*GetItemsResponse)(nil), // 2: CSV.Data.Service.GetItemsResponse
}
var file_grpc_proto_dataService_proto_depIdxs = []int32{
	1, // 0: CSV.Data.Service.GetItemsResponse.items:type_name -> CSV.Data.Service.Item
	0, // 1: CSV.Data.Service.Service.GetItems:input_type -> CSV.Data.Service.GetItemsRequest
	2, // 2: CSV.Data.Service.Service.GetItems:output_type -> CSV.Data.Service.GetItemsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_grpc_proto_dataService_proto_init() }
func file_grpc_proto_dataService_proto_init() {
	if File_grpc_proto_dataService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_proto_dataService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_dataService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_dataService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_proto_dataService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_proto_dataService_proto_goTypes,
		DependencyIndexes: file_grpc_proto_dataService_proto_depIdxs,
		MessageInfos:      file_grpc_proto_dataService_proto_msgTypes,
	}.Build()
	File_grpc_proto_dataService_proto = out.File
	file_grpc_proto_dataService_proto_rawDesc = nil
	file_grpc_proto_dataService_proto_goTypes = nil
	file_grpc_proto_dataService_proto_depIdxs = nil
}
